# ======================
# tag: imports, partials
# ======================
source=~/.config/hypr/mocha.conf

# ==========================================
# tag: vars,variables, environment variables
# ==========================================
$mainMod = SUPER

# required for SDL2
env = SDL_VIDEODRIVER,wayland
# until Wakefield project comes through
env = _JAVA_AWT_WM_NONREPARENTING,1

# required by:
# OBS screensharing through pipewire
# other QT apps
env = QT_QPA_PLATFORM,wayland
env = QT_QPA_PLATFORMTHEME,qt6ct

# ============
# tag: cursor
# ============
$cursorName = catppuccin-mocha-dark-cursors
env = XCURSOR_SIZE,24
# cursor size changed because hyprcursor needs it before v0.1.11
# it uses the real image instead of nominal size
# https://github.com/catppuccin/cursors/pull/63
# above PR should fix it for v0.1.11+
exec-once = hyprctl setcursor $cursorName 32

# =================================
# tag: hardware, devices, display
# =================================
monitor=eDP-1,highres,auto,1.25
monitor=HDMI-A-1,highrr,auto,1
# fallback for hot-plug
monitor=,preferred,auto,auto

input {
  kb_layout = us
  kb_options = caps:swapescape
  # sensitivity = 0.1
  numlock_by_default = true

  touchpad {
    # for press and drag, e.g. panning through excalidraw
    disable_while_typing = false
    natural_scroll = true
    tap-to-click = true
    tap-and-drag = true
  }
}

xwayland {
  force_zero_scaling = true
}

# ===================
# tag: misc, behavior
# ===================
misc {
  key_press_enables_dpms = true
  disable_hyprland_logo = false
  disable_splash_rendering = true
  # focus_on_activate = true
}

general {
  layout = dwindle
  resize_on_border = false

  snap {
    enabled = true
  }
}

input {
  follow_mouse = 1
  numlock_by_default = false
}

# ==================================
# tag: eyecandy, beautification
# ==================================
general {
  gaps_in = 3
  gaps_out = 3
  border_size = 1
  col.active_border = $sapphire
  col.inactive_border = $surface1
}

decoration {
  rounding = 2
  blur {
    enabled = yes
  }
  shadow {
    enabled = true
  }
}

animations {
  enabled = yes
  first_launch_animation = true
  animation = windows,1,6,default,popin
  animation = layers,1,6,default,fade
  animation = fade,1,6,default
  animation = workspaces,1,6,default,slide
}

# =================================================
# tag: program binds, keybinds, keyboard shortcuts
# =================================================
bind = $mainMod CTRL, r, exec, hyprctl reload
bind = $mainMod CTRL, q, exec, uwsm stop
bind = $mainMod, RETURN, exec, kitty
# reload-hyprpaper: custom script
bind = $mainMod CTRL, w, exec, reload-hyprpaper
bind = $mainMod, e, exec, nautilus -w
bind = $mainMod, r, execr, bemenu-run -i -p 'Run:'
# bind = $mainMod, a, exec, emacsclient -c
bind = $mainMod SHIFT, c, exec, hyprpicker -a # match powertoys colorpicker's keybinding
bind = , PRINT, exec, grimblast --notify copysave output
bind = $mainMod, p, exec, grimblast --notify copysave active
bind = $mainMod SHIFT, p, exec, grimblast --notify --freeze copysave area
bind = $mainMod, period, exec, flatpak run com.tomjwatson.Emote
bind = ,XF86Calculator, exec, gnome-calculator
# sensory-control: custom script
binde = ,XF86MonBrightnessUp, exec, sensory-control brightness up
binde = ,XF86MonBrightnessDown, exec, sensory-control brightness down
binde = ,XF86AudioRaiseVolume, exec, sensory-control volume up
binde = ,XF86AudioLowerVolume, exec, sensory-control volume down
bind = ,XF86AudioMute, exec, sensory-control volume mute
bind = ,XF86AudioPlay, exec, playerctl play-pause
bind = ,XF86AudioStop, exec, playerctl stop
bind = ,XF86AudioPrev, exec, playerctl previous
bind = ,XF86AudioNext, exec, playerctl next
# bind = $mainMod CTRL, p, exec, eww open powerWindow
# bind = $mainMod CTRL, p, submap, closeEww
bind = $mainMod CTRL, l, exec, hyprlock

# bindl -> trigger even with input inhibitor
# trigger for laptop switch. switch name found using `hyprctl devices`
# seem to not need, laptop auto-locks and sleeps anyways
# bindl=,switch:off:[Lid Switch],exec,~/.config/utils/sleepNow.sh

# =====================================
# tag: submaps, keyboard shortcut modes
# =====================================
submap = closeEww
bind = ,ESCAPE, exec, eww close-all
bind = ,ESCAPE, submap, reset
submap = reset

submap = splitDir
bind = ,l,layoutmsg,preselect r
bind = ,l,submap,reset
bind = ,h,layoutmsg,preselect l
bind = ,h,submap,reset
bind = ,k,layoutmsg,preselect t
bind = ,k,submap,reset
bind = ,j,layoutmsg,preselect b
bind = ,j,submap,reset
bind = ,ESCAPE,submap,reset
submap = reset

submap = resizeWins
bind = ,l,resizeactive,10 0
bind = ,h,resizeactive,-10 0
bind = ,j,resizeactive,0 -10
bind = ,k,resizeactive,0 10
bind = ,ESCAPE,submap,reset
submap = reset

# =====================================================
# tag: workspace managment, workspace keyboard bindings
# =====================================================
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, togglespecialworkspace

# move between open workspaces
bind = $mainMod CTRL, left, workspace, e-1
bind = $mainMod CTRL, right, workspace, e+1
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

binds {
  workspace_back_and_forth = true
}

gestures {
  workspace_swipe = on
}

# =========================
# tag: master window layout
# =========================
# master {
#   orientation = left
#   new_is_master = false
# }

# bind = $mainMod SHIFT, RETURN, layoutmsg, swapwithmaster

# ==========================
# tag: dwindle window layout
# ==========================
dwindle {
  force_split = 2
  preserve_split = true
}

# change split direction
bind = $mainMod SHIFT, d, submap, splitDir
# change from side-side split to top-bottom split
bind = $mainMod SHIFT, t, togglesplit,
bind = $mainMod SHIFT, RETURN, swapnext,

# =======================================
# tag: window management, window keybinds
# =======================================
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, k, movefocus, u
bind = $mainMod, j, movefocus, d
bind = $mainMod, h, movefocus, l
bind = $mainMod, l, movefocus, r

# cover entire screen
bind = $mainMod SHIFT, F11, fullscreen, 0
# keep gaps, bars
bind = $mainMod SHIFT, m, fullscreen, 1
bind = $mainMod SHIFT, q, killactive

bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, special

bind = $mainMod SHIFT, r, submap, resizeWins
bind = $mainMod SHIFT, f, togglefloating
bind = $mainMod SHIFT, c, centerwindow
# 272: LMB, 273: RMB
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# ===============
# tag: autostarts
# ===============
# shouldn't rely on dBus autostart
# in case there are multiple providers, according to the arch wiki
exec-once = dunst
# bluetooth headset controls
exec-once = easyeffects --gapplication-service

# =================
# tag: window rules
# =================
windowrulev2 = float,title:^(File Operation Progress)$
windowrulev2 = float,class:^(org.gnome.Calculator)$
windowrulev2 = float,class:^(nm-connection-editor)$
windowrulev2 = float,class:^(file-roller)$
windowrulev2 = float,title:( - Properties)$
windowrulev2 = float,title:^(Save File)$
windowrulev2 = float,title:^(.*)(wants to save)$
windowrulev2 = float,title:^(.*)(wants to open)$
# windowrulev2 = opacity 0.95,title:(Visual Studio Code)$
windowrulev2 = opacity 0.95,class:^(thunar)$
windowrulev2 = opacity 0.95,class:^(emacs)$ # until emacs 29.1's release
windowrulev2 = float,class:^(io.github.celluloid_player.Celluloid)$
windowrulev2 = minsize 1200 800,class:^(io.github.celluloid_player.Celluloid)$
windowrulev2 = center,class:^(io.github.celluloid_player.Celluloid)$
windowrulev2 = float,class:^(mpv)$
windowrulev2 = minsize 1200 800,class:^(mpv)$
windowrulev2 = center,class:^(mpv)$
windowrulev2 = fullscreen,class:^(pinta)$
windowrulev2 = float,class:^(kitty)$
windowrulev2 = size 1280 640,class:^(kitty)$
windowrulev2 = center 1,class:^(kitty)$
windowrulev2 = rounding 24,class:^(zenity)$